    public unsafe partial class %CLASS_NAME% : SafeHandleZeroOrMinusOneIsInvalid
    {
        /// <summary>
        /// Pointer to the underlying native object
        /// </summary>
        public IntPtr Handle => DangerousGetHandle();

        /// <summary>
        /// Create %CLASS_NAME% from a native pointer
        /// </summary>
        public %CLASS_NAME%(IntPtr handle) : base(ownsHandle: true) => SetHandle(handle);

        #region DllImports
%DLLIMPORTS%
        #endregion

        #region ReleaseHandle
        protected override bool ReleaseHandle() => %CCLASS_NAME%_Dispose(Handle);

        [DllImport(%NATIVE_LIBRARY_PATH%, CallingConvention = CallingConvention.Cdecl)]
        private static extern bool %CLASS_NAME%_Dispose(IntPtr target);
        #endregion
    }

